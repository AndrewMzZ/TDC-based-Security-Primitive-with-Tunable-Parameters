# 导入配置文件
configuration_file = open('configuration_file.txt','r')
config_info = configuration_file.readlines()
intial_info1 = config_info[1].split('[')
intial_info = intial_info1[1].split(']')
chain_info1 = config_info[3].split('[')
chain_info = chain_info1[1].split(']')
hierarchy_info1 = config_info[5].split('[')
hierarchy_info = hierarchy_info1[1].split(']')
intial_delay = intial_info[0]
chain_delay = chain_info[0]
hierarchy = hierarchy_info[0]
'''
print(intial_delay)
print(chain_delay)
print(hierarchy)
'''
num_intial_delay = int(intial_delay)
num_chain_delay = int(chain_delay)
output_width = num_chain_delay*4
output_width_1 = num_chain_delay*4-1

# 创建文件
TDC_netlist = open('TDC.txt', 'w' + 't')

# 直接插入part1
read_file = open('part1.txt', 'r')
for line in read_file.readlines():
    TDC_netlist.write(line)
read_file.close()

# part2
TDC_netlist.write('        (port (array (rename data "data[')
TDC_netlist.write(str(output_width_1))
TDC_netlist.write(':0]") ')
TDC_netlist.write(str(output_width))
TDC_netlist.write(') (direction OUTPUT))\n')
TDC_netlist.write('       )\n')
TDC_netlist.write('       (contents\n')

# part3
TDC_netlist.write('         (instance (rename CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst "CHAIN_DELAy[')
TDC_netlist.write(str(0))
TDC_netlist.write('].CARRY4_inst") (viewref netlist (cellref CARRY4 (libraryref hdi_primitives)))\n')
TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
TDC_netlist.write('           (property BUS_INFO (string "4:OUTPUT:O<3:0>"))\n')
TDC_netlist.write('           (property OPTIMIZE_PRIMITIVES_NGC (string "no"))\n')
TDC_netlist.write('         )\n')
for i in range(1,num_chain_delay):
    TDC_netlist.write('         (instance (rename CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1 "CHAIN_DELAy[')
    TDC_netlist.write(str(i))
    TDC_netlist.write('].CARRY4_inst1") (viewref netlist (cellref CARRY4 (libraryref hdi_primitives)))\n')
    TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
    TDC_netlist.write('           (property BUS_INFO (string "4:OUTPUT:O<3:0>"))\n')
    TDC_netlist.write('           (property OPTIMIZE_PRIMITIVES_NGC (string "no"))\n')
    TDC_netlist.write('         )\n')

# part4
TDC_netlist.write('         (instance (rename INTIAL_DELAY_')
TDC_netlist.write(str(0))
TDC_netlist.write('__LUT5_inst "INTIAL_DELAY[')
TDC_netlist.write(str(0))
TDC_netlist.write('].LUT5_inst") (viewref netlist (cellref LUT5 (libraryref hdi_primitives)))\n')
TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
TDC_netlist.write('           (property OPTIMIZE_PRIMITIVES_NGC (string "no"))\n')
TDC_netlist.write('           (property INIT (string "32\'h88888888"))\n')
TDC_netlist.write('         )\n')
for i in range(1,num_intial_delay):
    TDC_netlist.write('         (instance (rename INTIAL_DELAY_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__LUT5_inst1 "INTIAL_DELAY[')
    TDC_netlist.write(str(i))
    TDC_netlist.write('].LUT5_inst1") (viewref netlist (cellref LUT5 (libraryref hdi_primitives)))\n')
    TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
    TDC_netlist.write('           (property OPTIMIZE_PRIMITIVES_NGC (string "no"))\n')
    TDC_netlist.write('           (property INIT (string "32\'h88888888"))\n')
    TDC_netlist.write('         )\n')

# part5
for i in range(output_width):
    TDC_netlist.write('         (instance out_p_')
    TDC_netlist.write(str(i))
    TDC_netlist.write(' (viewref netlist (cellref FD_1 (libraryref hdi_primitives)))\n')
    TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
    TDC_netlist.write('           (property INIT (string "1\'b0"))\n')
    TDC_netlist.write('         )\n')

# part6
for i in range(output_width):
    TDC_netlist.write('         (instance out_')
    TDC_netlist.write(str(i))
    TDC_netlist.write(' (viewref netlist (cellref FD_1 (libraryref hdi_primitives)))\n')
    TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
    TDC_netlist.write('           (property INIT (string "1\'b0"))\n')
    TDC_netlist.write('         )\n')

# part7
TDC_netlist.write('         (instance XST_GND (viewref netlist (cellref GND (libraryref hdi_primitives)))\n')
TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
TDC_netlist.write('         )\n')
TDC_netlist.write('         (instance XST_VCC (viewref netlist (cellref VCC (libraryref hdi_primitives)))\n')
TDC_netlist.write('           (property XSTLIB (boolean (true)))\n')
TDC_netlist.write('         )\n')

# part8
TDC_netlist.write('         (net N0 (joined\n')
TDC_netlist.write('          (portref G (instanceref XST_GND))\n')
# block1:第一块特殊
TDC_netlist.write('          (portref I2 (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(0))
TDC_netlist.write('__LUT5_inst))\n')
TDC_netlist.write('          (portref I3 (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(0))
TDC_netlist.write('__LUT5_inst))\n')
TDC_netlist.write('          (portref I4 (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(0))
TDC_netlist.write('__LUT5_inst))\n')
for i in range(1,num_intial_delay):
    TDC_netlist.write('          (portref I2 (instanceref INTIAL_DELAY_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__LUT5_inst1))\n')
    TDC_netlist.write('          (portref I3 (instanceref INTIAL_DELAY_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__LUT5_inst1))\n')
    TDC_netlist.write('          (portref I4 (instanceref INTIAL_DELAY_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__LUT5_inst1))\n')
# block2:第一块特殊
TDC_netlist.write('          (portref (member DI 0) (instanceref CHAIN_DELAy_0__CARRY4_inst))\n')
TDC_netlist.write('          (portref (member DI 1) (instanceref CHAIN_DELAy_0__CARRY4_inst))\n')
TDC_netlist.write('          (portref (member DI 2) (instanceref CHAIN_DELAy_0__CARRY4_inst))\n')
TDC_netlist.write('          (portref (member DI 3) (instanceref CHAIN_DELAy_0__CARRY4_inst))\n')
TDC_netlist.write('          (portref CI (instanceref CHAIN_DELAy_0__CARRY4_inst))\n')
# TDC_netlist.write('          (portref CYINIT (instanceref CHAIN_DELAy_0__CARRY4_inst))\n')
for i in range(1,num_chain_delay):
    TDC_netlist.write('          (portref (member DI 0) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member DI 1) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member DI 2) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member DI 3) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref CYINIT (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')

# part9
TDC_netlist.write('         (net N1 (joined\n')
TDC_netlist.write('          (portref P (instanceref XST_VCC))\n')
TDC_netlist.write('          (portref (member S 0) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          (portref (member S 1) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          (portref (member S 2) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          (portref (member S 3) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
for i in range(1,num_chain_delay):
    TDC_netlist.write('          (portref (member S 0) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member S 1) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member S 2) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member S 3) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')

# part10
# 第一级
# 1
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str(0))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str(0))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str(0))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 3) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
# 2
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str(1))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str(1))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str(1))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 2) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
# 3
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str(2))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str(2))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str(2))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 1) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
# 4
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str(3))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str(3))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str(3))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref CI (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(1))
TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          (portref (member CO 0) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(0))
TDC_netlist.write('__CARRY4_inst))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
for i in range(1,num_chain_delay-1):
    #1
    TDC_netlist.write('         (net (rename carry_taps_')
    TDC_netlist.write(str(i*4))
    TDC_netlist.write('_ "carry_taps[')
    TDC_netlist.write(str(i*4))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref D (instanceref out_')
    TDC_netlist.write(str(i*4))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          (portref (member CO 3) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('         )\n')
    #2
    TDC_netlist.write('         (net (rename carry_taps_')
    TDC_netlist.write(str(i*4+1))
    TDC_netlist.write('_ "carry_taps[')
    TDC_netlist.write(str(i*4+1))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref D (instanceref out_')
    TDC_netlist.write(str(i*4+1))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          (portref (member CO 2) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('         )\n')
    #3
    TDC_netlist.write('         (net (rename carry_taps_')
    TDC_netlist.write(str(i*4+2))
    TDC_netlist.write('_ "carry_taps[')
    TDC_netlist.write(str(i*4+2))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref D (instanceref out_')
    TDC_netlist.write(str(i*4+2))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          (portref (member CO 1) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('         )\n')
    #4
    TDC_netlist.write('         (net (rename carry_taps_')
    TDC_netlist.write(str(i*4+3))
    TDC_netlist.write('_ "carry_taps[')
    TDC_netlist.write(str(i*4+3))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref D (instanceref out_')
    TDC_netlist.write(str(i*4+3))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          (portref CI (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i+1))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          (portref (member CO 0) (instanceref CHAIN_DELAy_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__CARRY4_inst1))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('         )\n')
# 最后一级
#1
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str((num_chain_delay-1)*4))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str((num_chain_delay-1)*4))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str((num_chain_delay-1)*4))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 3) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(num_chain_delay-1))
TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
#2
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str((num_chain_delay-1)*4+1))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str((num_chain_delay-1)*4+1))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str((num_chain_delay-1)*4+1))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 2) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(num_chain_delay-1))
TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
#3
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str((num_chain_delay-1)*4+2))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str((num_chain_delay-1)*4+2))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str((num_chain_delay-1)*4+2))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 1) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(num_chain_delay-1))
TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')
#4
TDC_netlist.write('         (net (rename carry_taps_')
TDC_netlist.write(str((num_chain_delay-1)*4+3))
TDC_netlist.write('_ "carry_taps[')
TDC_netlist.write(str((num_chain_delay-1)*4+3))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref D (instanceref out_')
TDC_netlist.write(str((num_chain_delay-1)*4+3))
TDC_netlist.write('))\n')
TDC_netlist.write('          (portref (member CO 0) (instanceref CHAIN_DELAy_')
TDC_netlist.write(str(num_chain_delay-1))
TDC_netlist.write('__CARRY4_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')

# part11
# 第一级
TDC_netlist.write('         (net (rename O_')
TDC_netlist.write(str(0))
TDC_netlist.write('_ "O[')
TDC_netlist.write(str(0))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref I0 (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(1))
TDC_netlist.write('__LUT5_inst1))\n')
TDC_netlist.write('          (portref O (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(0))
TDC_netlist.write('__LUT5_inst))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('           (property NOMERGE (boolean (true)))\n')
TDC_netlist.write('           (property NOCLIP (boolean (true)))\n')
TDC_netlist.write('         )\n')
# 中间部分
for i in range(1,num_intial_delay-1):
    TDC_netlist.write('         (net (rename O_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('_ "O[')
    TDC_netlist.write(str(i))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref I0 (instanceref INTIAL_DELAY_')
    TDC_netlist.write(str(i+1))
    TDC_netlist.write('__LUT5_inst1))\n')
    TDC_netlist.write('          (portref O (instanceref INTIAL_DELAY_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__LUT5_inst1))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('           (property NOMERGE (boolean (true)))\n')
    TDC_netlist.write('           (property NOCLIP (boolean (true)))\n')
    TDC_netlist.write('         )\n')
# 最后一级
TDC_netlist.write('         (net (rename O_')
TDC_netlist.write(str(num_intial_delay-1))
TDC_netlist.write('_ "O[')
TDC_netlist.write(str(num_intial_delay-1))
TDC_netlist.write(']") (joined\n')
TDC_netlist.write('          (portref CYINIT (instanceref  CHAIN_DELAy_0__CARRY4_inst))\n')
TDC_netlist.write('          (portref O (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(num_intial_delay-1))
TDC_netlist.write('__LUT5_inst1))\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('           (property NOMERGE (boolean (true)))\n')
TDC_netlist.write('           (property NOCLIP (boolean (true)))\n')
TDC_netlist.write('         )\n')
# block2
TDC_netlist.write('         (net ena (joined\n')
TDC_netlist.write('          (portref I1 (instanceref INTIAL_DELAY_')
TDC_netlist.write(str(0))
TDC_netlist.write('__LUT5_inst))\n')
for i in range(1,num_intial_delay):
    TDC_netlist.write('          (portref I1 (instanceref INTIAL_DELAY_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('__LUT5_inst1))\n')
TDC_netlist.write('          (portref ena)\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')

# part12
TDC_netlist.write('         (net clk_delay (joined\n')
TDC_netlist.write('          (portref I0 (instanceref INTIAL_DELAY_0__LUT5_inst))\n')
TDC_netlist.write('          (portref clk_delay)\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')

# part13
TDC_netlist.write('         (net clk_sample (joined\n')
for i in range(output_width):
    TDC_netlist.write('          (portref C (instanceref out_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('))\n')
for i in range(output_width):
    TDC_netlist.write('          (portref C (instanceref out_p_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('))\n')
TDC_netlist.write('          (portref clk_sample)\n')
TDC_netlist.write('          )\n')
TDC_netlist.write('         )\n')

# part14
for i in range(output_width):
    TDC_netlist.write('         (net (rename out_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('_ "out[')
    TDC_netlist.write(str(i))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref D (instanceref out_p_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          (portref Q (instanceref out_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('           (property NOMERGE (boolean (true)))\n')
    TDC_netlist.write('           (property NOCLIP (boolean (true)))\n')
    TDC_netlist.write('         )\n')
    TDC_netlist.write('         (net (rename out_p_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('_ "out_p[')
    TDC_netlist.write(str(i))
    TDC_netlist.write(']") (joined\n')
    TDC_netlist.write('          (portref Q (instanceref out_p_')
    TDC_netlist.write(str(i))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          (portref (member data ')
    TDC_netlist.write(str(output_width_1-i))
    TDC_netlist.write('))\n')
    TDC_netlist.write('          )\n')
    TDC_netlist.write('           (property NOCLIP (boolean (true)))\n')
    TDC_netlist.write('           (property NOMERGE (boolean (true)))\n')
    TDC_netlist.write('         )\n')

# part15
TDC_netlist.write('       )\n')
TDC_netlist.write('     )\n')
TDC_netlist.write('   )\n')
TDC_netlist.write('  )\n')
TDC_netlist.write('(comment "Reference To The Cell Of Highest Level")\n')
TDC_netlist.write('  (design TDC\n')
TDC_netlist.write('    (cellref TDC (libraryref aes_top_lib))\n')
TDC_netlist.write('    (property PART (string "xc6slx75csg484-2"))\n')
TDC_netlist.write('  )\n')
TDC_netlist.write(')\n')

TDC_netlist.close()

'''
# 代码生成结果
read_file = open('TDC_netlist.txt', 'r')
for line in read_file.readlines():
    print(line)
read_file.close()
'''

# 创建文件
TDC_ucf = open('TDC_ucf.txt', 'w' + 't')

lut_slice_num1 = num_intial_delay//4
lut_slice_num2 = num_intial_delay%4


for lut_location in range(lut_slice_num1):
    # 1
    TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
    TDC_ucf.write(str(num_intial_delay-1-4*lut_location))
    TDC_ucf.write('].LUT5_inst1" BEL = D6LUT;\n')
    TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
    TDC_ucf.write(str(num_intial_delay-1-4*lut_location))
    TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
    TDC_ucf.write(str(82-lut_location))
    TDC_ucf.write(';\n')
    # 2
    TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
    TDC_ucf.write(str(num_intial_delay-2-4*lut_location))
    TDC_ucf.write('].LUT5_inst1" BEL = C6LUT;\n')
    TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
    TDC_ucf.write(str(num_intial_delay-2-4*lut_location))
    TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
    TDC_ucf.write(str(82-lut_location))
    TDC_ucf.write(';\n')
    # 3
    TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
    TDC_ucf.write(str(num_intial_delay-3-4*lut_location))
    TDC_ucf.write('].LUT5_inst1" BEL = B6LUT;\n')
    TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
    TDC_ucf.write(str(num_intial_delay-3-4*lut_location))
    TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
    TDC_ucf.write(str(82-lut_location))
    TDC_ucf.write(';\n')
    # 4
    if lut_slice_num2 ==0 and lut_location == lut_slice_num1-1:
        TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
        TDC_ucf.write(str(num_intial_delay-4-4*lut_location))
        TDC_ucf.write('].LUT5_inst" BEL = A6LUT;\n')
        TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
        TDC_ucf.write(str(num_intial_delay-4-4*lut_location))
        TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
        TDC_ucf.write(str(82-lut_location))
        TDC_ucf.write(';\n')
    else:
        TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
        TDC_ucf.write(str(num_intial_delay-4-4*lut_location))
        TDC_ucf.write('].LUT5_inst1" BEL = A6LUT;\n')
        TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
        TDC_ucf.write(str(num_intial_delay-4-4*lut_location))
        TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
        TDC_ucf.write(str(82-lut_location))
        TDC_ucf.write(';\n')

if lut_slice_num2 != 0:
    if lut_slice_num2 >= 1:
        if lut_slice_num2 ==1:
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 1 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst" BEL = D6LUT;\n')
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 1 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst" LOC = SLICE_X0Y')
            TDC_ucf.write(str(82 - lut_slice_num1))
            TDC_ucf.write(';\n')
        else:
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 1 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst1" BEL = D6LUT;\n')
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 1 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
            TDC_ucf.write(str(82 - lut_slice_num1))
            TDC_ucf.write(';\n')
    if lut_slice_num2 >= 2:
        if lut_slice_num2 ==2:
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 2 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst" BEL = C6LUT;\n')
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 2 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst" LOC = SLICE_X0Y')
            TDC_ucf.write(str(82 - lut_slice_num1))
            TDC_ucf.write(';\n')
        else:
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 2 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst1" BEL = C6LUT;\n')
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 2 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
            TDC_ucf.write(str(82 - lut_slice_num1))
            TDC_ucf.write(';\n')
    if lut_slice_num2 >= 3:
        if lut_slice_num2 ==3:
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 3 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst" BEL = B6LUT;\n')
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 3 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst" LOC = SLICE_X0Y')
            TDC_ucf.write(str(82 - lut_slice_num1))
            TDC_ucf.write(';\n')
        else:
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 3 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst1" BEL = B6LUT;\n')
            TDC_ucf.write('INST "' + hierarchy + 'INTIAL_DELAY[')
            TDC_ucf.write(str(num_intial_delay - 3 - 4 * lut_slice_num1))
            TDC_ucf.write('].LUT5_inst1" LOC = SLICE_X0Y')
            TDC_ucf.write(str(82 - lut_slice_num1))
            TDC_ucf.write(';\n')


# 第一个carry4命名特殊
TDC_ucf.write('INST "' + hierarchy + 'CHAIN_DELAy[')
TDC_ucf.write(str(0))
TDC_ucf.write('].CARRY4_inst" LOC = SLICE_X0Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
# 1
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(0))
TDC_ucf.write('" BEL = AFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(0))
TDC_ucf.write('" LOC = SLICE_X0Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
#.
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(0))
TDC_ucf.write('" BEL = AFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(0))
TDC_ucf.write('" LOC = SLICE_X1Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
# 2
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(1))
TDC_ucf.write('" BEL = BFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(1))
TDC_ucf.write('" LOC = SLICE_X0Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
#.
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(1))
TDC_ucf.write('" BEL = BFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(1))
TDC_ucf.write('" LOC = SLICE_X1Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
# 3
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(2))
TDC_ucf.write('" BEL = CFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(2))
TDC_ucf.write('" LOC = SLICE_X0Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
#.
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(2))
TDC_ucf.write('" BEL = CFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(2))
TDC_ucf.write('" LOC = SLICE_X1Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
# 4
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(3))
TDC_ucf.write('" BEL = DFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_')
TDC_ucf.write(str(3))
TDC_ucf.write('" LOC = SLICE_X0Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')
#.
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(3))
TDC_ucf.write('" BEL = DFF;\n')
TDC_ucf.write('INST "' + hierarchy + 'out_p_')
TDC_ucf.write(str(3))
TDC_ucf.write('" LOC = SLICE_X1Y')
TDC_ucf.write(str(83))
TDC_ucf.write(';\n')

for carry4_location in range(1,num_chain_delay):
    TDC_ucf.write('INST "' + hierarchy + 'CHAIN_DELAy[')
    TDC_ucf.write(str(carry4_location))
    TDC_ucf.write('].CARRY4_inst1" LOC = SLICE_X0Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    # 1
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location))
    TDC_ucf.write('" BEL = AFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location))
    TDC_ucf.write('" LOC = SLICE_X0Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    #.
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location))
    TDC_ucf.write('" BEL = AFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location))
    TDC_ucf.write('" LOC = SLICE_X1Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    # 2
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location+1))
    TDC_ucf.write('" BEL = BFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location+1))
    TDC_ucf.write('" LOC = SLICE_X0Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    #.
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location+1))
    TDC_ucf.write('" BEL = BFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location+1))
    TDC_ucf.write('" LOC = SLICE_X1Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    # 3
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location+2))
    TDC_ucf.write('" BEL = CFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location+2))
    TDC_ucf.write('" LOC = SLICE_X0Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    #.
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location+2))
    TDC_ucf.write('" BEL = CFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location+2))
    TDC_ucf.write('" LOC = SLICE_X1Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    # 4
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location+3))
    TDC_ucf.write('" BEL = DFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_')
    TDC_ucf.write(str(4*carry4_location+3))
    TDC_ucf.write('" LOC = SLICE_X0Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')
    #.
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location+3))
    TDC_ucf.write('" BEL = DFF;\n')
    TDC_ucf.write('INST "' + hierarchy + 'out_p_')
    TDC_ucf.write(str(4*carry4_location+3))
    TDC_ucf.write('" LOC = SLICE_X1Y')
    TDC_ucf.write(str(83+carry4_location))
    TDC_ucf.write(';\n')

TDC_ucf.close()

# 修改文件格式
import os
# 列出当前目录下所有的文件
files = os.listdir('.')  # 如果path为None，则使用path = '.'

for i in files:
    if i == 'TDC.edn':
        os.remove('TDC.edn')
    elif i == 'TDC_ucf.ucf':
        os.remove('TDC_ucf.ucf')

for filename in files:
    portion = os.path.splitext(filename)  # 分离文件名与扩展名
    if filename == 'TDC.txt':
        # 重新组合文件名和后缀名
        newname = portion[0] + '.edn'
        os.rename(filename, newname)

for filename in files:
    portion = os.path.splitext(filename)  # 分离文件名与扩展名
    if filename == 'TDC_ucf.txt':
        # 重新组合文件名和后缀名
        newname = portion[0] + '.ucf'
        os.rename(filename, newname)